import{_ as i,r as l,o as s,c as d,b as e,d as t,a as o,w as a,e as r}from"./app-OmzTsp-1.js";const c={},h=r('<h1 id="guide" tabindex="-1"><a class="header-anchor" href="#guide"><span>Guide</span></a></h1><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>The plugin can generate feed files in the following three formats for you:</p><ul><li>Atom 1.0</li><li>JSON 1.1</li><li>RSS 2.0</li></ul><p>Please set <code>atom</code>, <code>json</code> or <code>rss</code> to <code>true</code> in the plugin options according to the formats you want to generate.</p><p>To correctly generate feed links, you need to set <code>hostname</code> in the plugin options,</p><h2 id="readable-preview" tabindex="-1"><a class="header-anchor" href="#readable-preview"><span>Readable Preview</span></a></h2><p>When you open the feed file in browser, we magically convert atom and rss feed xml to human readable html via xsl template. Check <a href="/atom.xml">atom</a> and <a href="/rss.xml">rss</a> feed of this site as an example!</p><p>If you want to preview your feed in devServer, set <code>devServer: true</code> in plugin options. You may also need to set <code>devHostname</code> if you are not using the default <code>http://localhost:{port}</code>.</p><h2 id="channel-settings" tabindex="-1"><a class="header-anchor" href="#channel-settings"><span>Channel settings</span></a></h2><p>You can customize the feed channel information by setting the <code>channel</code> option.</p><p>We recommend the following settings:</p><ul><li>Convert the date of creating the feed to ISOString and write it into <code>channel.pubDate</code></li><li>The update period of the content set in <code>channel.ttl</code> (unit: minutes)</li><li>Set copyright information via <code>channel.copyright</code></li><li>Set the channel author via <code>channel.author</code>.</li></ul>',13),u=e("h2",{id:"feed-generation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#feed-generation"},[e("span",null,"Feed Generation")])],-1),f=e("p",null,"By default, all articles are added to the feed stream.",-1),p=e("code",null,"feed",-1),g=e("code",null,"getter",-1),m=e("h3",{id:"i18n-config",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#i18n-config"},[e("span",null,"I18n Config")])],-1),_=e("p",null,"The plugin generates separate feeds for each language.",-1),v=e("p",null,[t("You can provide different settings for different languages via "),e("code",null,"locales"),t(" in the plugin options.")],-1);function b(w,x){const n=l("RouteLink");return s(),d("div",null,[h,e("p",null,[t("For detailed options and their default values, see "),o(n,{to:"/plugins/feed/channel.html"},{default:a(()=>[t("Channel Config")]),_:1})]),u,f,e("p",null,[t("You can set "),p,t(" and other options in page frontmatter to control contents of feed item. See "),o(n,{to:"/plugins/feed/frontmatter.html"},{default:a(()=>[t("Frontmatter Config")]),_:1}),t(" for how they are converted.")]),e("p",null,[t("You can take full control of feed items generation by configuring the "),g,t(" in the plugin options. For detailed options and their default values, see "),o(n,{to:"/plugins/feed/getter.html"},{default:a(()=>[t("Configuration â†’ Feed Getter")]),_:1}),t(".")]),m,_,v])}const k=i(c,[["render",b],["__file","guide.html.vue"]]),S=JSON.parse('{"path":"/plugins/feed/guide.html","title":"Guide","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Readable Preview","slug":"readable-preview","link":"#readable-preview","children":[]},{"level":2,"title":"Channel settings","slug":"channel-settings","link":"#channel-settings","children":[]},{"level":2,"title":"Feed Generation","slug":"feed-generation","link":"#feed-generation","children":[{"level":3,"title":"I18n Config","slug":"i18n-config","link":"#i18n-config","children":[]}]}],"git":{"updatedTime":1706674769000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":1}]},"filePathRelative":"plugins/feed/guide.md"}');export{k as comp,S as data};
